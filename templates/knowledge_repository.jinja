{% extends 'base.jinja' %}

{% block content %}
<style>
    /* Add styles as needed */
    #postArticleModal {
        display: none;
        position: fixed;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        padding: 20px;
        border: 1px solid black;
        background-color: white;
    }
</style>

<nav>
    <!-- Navbar with a back button to go back to the home page -->
    <button onclick="window.location.href='{{ url_for('home', username=request.args.get('username'), sessionKey=request.args.get('sessionKey')) }}'">Back to Home page</button>
</nav>

<h1>Knowledge Repository</h1>

<main>
    <!-- Placeholder content for knowledge repository -->
    <section id="articles">
        <h2>Articles</h2>
        <!-- Button to post a new article -->
        <button id="postArticleBtn">Post Article</button>
        
        <!-- Modal for posting a new article -->
        <div id="postArticleModal">
            <h3>Post a New Article</h3>
            <p>Title:</p>
            <input type="text" id="articleTitle" placeholder="Enter the title">
            <p>Content:</p>
            <textarea id="articleContent" placeholder="Write your article here..."></textarea>
            <button onclick="postArticle()">Submit</button>
            <button onclick="closeModal()">Cancel</button>
        </div>

        <!-- List of articles -->
        <ul id="articles_list">
            <!-- Articles will be populated here -->
        </ul>
    </section>
</main>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        // Function to open the modal
        function openModal() {
            document.getElementById('postArticleModal').style.display = 'block';
        }

        // Function to close the modal
        function closeModal() {
            document.getElementById('postArticleModal').style.display = 'none';
        }

        // Set up the post article button to open the modal
        document.getElementById('postArticleBtn').onclick = openModal;

        // Function to post an article
        async function postArticle() {
            const articleTitle = document.getElementById('articleTitle').value;
            const articleContent = document.getElementById('articleContent').value;
            const username = "{{ request.args.get('username') }}";
            const sessionKey = "{{ request.args.get('sessionKey') }}";

            if (!articleTitle || !articleContent) {
                alert("Title and content cannot be empty!");
                return;
            }

            try {
                const response = await fetch("{{ url_for('post_article') }}", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        username: username,
                        sessionKey: sessionKey,
                        title: articleTitle,
                        content: articleContent,
                    }),
                });

                if (response.ok) {
                    const result = await response.json();
                    alert("Article posted successfully!");
                    closeModal();
                    // Refresh articles list after posting a new article
                    loadArticles();
                } else {
                    const errorText = await response.text();
                    console.error("Failed to post article:", errorText);
                    alert("Failed to post article. Server response: " + errorText);
                }
            } catch (error) {
                console.error("Error posting article:", error);
                alert("An error occurred while posting the article.");
            }
        }

        // Function to load articles
        async function loadArticles() {
            try {
                const response = await fetch("{{ url_for('get_articles') }}");
                if (response.ok) {
                    const articles = await response.json();
                    const articlesList = document.getElementById('articles_list');
                    articlesList.innerHTML = ''; // Clear existing articles

                    articles.forEach(article => {
                        const articleItem = document.createElement('li');
                        articleItem.innerHTML = `<strong>${article.title}</strong> by ${article.username}<br>${article.content}`;
                        articlesList.appendChild(articleItem);
                    });
                } else {
                    console.error("Failed to load articles.");
                }
            } catch (error) {
                console.error("Error loading articles:", error);
            }
        }

        window.postArticle = postArticle;
        window.closeModal = closeModal;

        // Load articles on page load
        loadArticles();
    });
</script>
{% endblock %}
